/*1.Completati urmatorul cod pentru a afisa cel mai mare numar dintre cele trei numere prezentate:
DECLARE @Nl INT, @N2 INT, @N3 INT;
DECLARE @MAI_MARE INT;
SET @Nl = 60 * RAND();
SET @N2 = 60 * RAND();
SET @N3 = 60 * RAND();
-- Aici ar trebui plasate IF-urile
PRINT @Nl;
PRINT @N2;
PRINT @N3;
PRINT 'Mai mare = ' + CAST(@MAI_MARE AS VARCHAR(2)); */

DECLARE @N1 INT, @N2 INT, @N3 INT;
DECLARE @MAI_MARE INT;

SET @N1 = 60 * RAND();
SET @N2 = 60 * RAND();
SET @N3 = 60 * RAND();

SET @MAI_MARE = @N1;

IF (@N1 < @N2)
	BEGIN
		SELECT @MAI_MARE = @N2;
	END

IF(@MAI_MARE < @N3) 
	BEGIN
		SELECT @MAI_MARE = @N3;
	END
	


PRINT @N1;
PRINT @N2;
PRINT @N3;

PRINT 'Mai mare = ' + CAST(@MAI_MARE AS VARCHAR(2));




/*2.Afisati primele zece date (numele, prenumele studentului) in functie de valoarea notei (cu exceptia
notelor 6 si 8) a studentului la primul test al disciplinei Baze de date , folosind structura de
altemativa IF. .. ELSE. Sa se foloseasca variabilele.*/


DECLARE @idDisciplina INT, @test VARCHAR(60);
SET @test = 'Testul 1';
SELECT @idDisciplina = Id_Disciplina FROM discipline WHERE Disciplina = 'Baze de date';
SELECT TOP(10) Nume_Student, Prenume_Student FROM studenti st JOIN studenti_reusita sr ON st.Id_Student = sr.Id_Student 
WHERE sr.Id_Disciplina = @idDisciplina AND Tip_Evaluare = @test AND Nota <> 8 AND Nota <> 6




/*3. Rezolvati aceeiasi sarcina, 1, apeland la structura selectiva CASE.*/

DECLARE @N1 INT, @N2 INT, @N3 INT;
DECLARE @MAI_MARE INT, @MAI_MARE_FINAL INT, @MAI_MARE_FINAL1 INT;

SET @N1 = 60 * RAND();
SET @N2 = 60 * RAND();
SET @N3 = 60 * RAND();

SET @MAI_MARE = @N1;

SET @MAI_MARE_FINAL =  (
	CASE
		WHEN @MAI_MARE < @N2 THEN @N2
		WHEN @MAI_MARE < @N3 THEN @N3
		ELSE @MAI_MARE
	END
);


SET @MAI_MARE_FINAL1 =  (
	CASE
		WHEN @MAI_MARE_FINAL < @N3 THEN @N3
		ELSE @MAI_MARE_FINAL
	END
);

PRINT @N1;
PRINT @N2;
PRINT @N3;

PRINT 'Mai mare = ' + CAST(@MAI_MARE_FINAL1 AS VARCHAR(2));


/*4. Modificati exercitiile din sarcinile 1 si 2 pentru a include procesarea erorilor cu TRY si CATCH, si
RAISERRROR. */

BEGIN TRY
	DECLARE @N1 INT, @N2 INT, @N3 INT, @errorMsg VARCHAR(60);
	DECLARE @Mai_Mare INT;
	SET @N1 = 60 * RAND();
	SET @N2 = 60 * RAND();
	SET @N3 = 60 * RAND();

	SET @Mai_Mare = @N1;
	IF (@Mai_Mare < @N2)
		BEGIN
		SET @Mai_Mare = @N2;
		END
	IF (@Mai_Mare < @N3)
		BEGIN
		SET @Mai_Mare = @N3
		END

	PRINT @N1;
	PRINT @N2;
	PRINT @N3;

	PRINT 'Mai mare = ' + CAST(@Mai_Mare AS VARCHAR(2));

	SET @errorMsg = 'Blocul TRY s-a executat cu succes';
	RAISERROR(@errorMsg, 15, 1);
END TRY
BEGIN CATCH
	PRINT ERROR_MESSAGE();
	PRINT ERROR_SEVERITY();
	PRINT ERROR_STATE();
END CATCH





